<button onclick="navigator.clipboard.writeText(`# Hippocrates-Edu
A Socratic-style educational platform with a chat feature and AI-driven 10x10 grid, built on the Hippocrates AI.

## Setup Instructions
1. Open in Codespaces: Click “Code” > “Codespaces” > “Create Codespaces on main”.
2. Run the setup script in the Codespaces terminal:
   \`\`\`bash
   pip install -r requirements.txt && sudo apt-get install -y nodejs npm && npm install && npm run build && uvicorn app:app --host 0.0.0.0 --port 8000
   \`\`\`
3. Open the browser preview (port 8000, click “Ports” > “Open in Browser”) to see the grid and chat for a math lesson.
4. (Optional) Run the original console version: `python main.py`.

## Features
- 10x10 grid visualizing self-organizing AI.
- Real-time chat with Socratic prompts (e.g., “Solve x + 3 = 7”).
- Built with FastAPI, React, and SQLAlchemy.

## License
MIT License (see `LICENSE`).`)">Copy README.md</button>

#### app.py
```python
from fastapi import FastAPI, WebSocket, Response
import json
from network import Network  # From Hippocrates repo

app = FastAPI()
network = Network(grid_size=10)  # 10x10 grid

@app.get("/")
async def serve_index():
    with open("build/index.html") as f:
        return Response(content=f.read(), media_type="text/html")

@app.websocket("/chat")
async def websocket_endpoint(websocket: WebSocket):
    await websocket.accept()
    while True:
        data = await websocket.receive_text()
        user_answer = json.loads(data).get("answer", "")
        network.update()  # Update grid states
        states = [[node.state for node in row] for row in network.grid]
        response = {
            "question": "Solve x + 3 = 7. Why does it work?",
            "feedback": "Great, x = 4!" if user_answer == "4" else "Try again!",
            "grid": states
        }
        await websocket.send_json(response)
